pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Récupère le code depuis la branche 'nourssine' du dépôt GitHub
                checkout([$class: 'GitSCM', branches: [[name: 'nourssine']], userRemoteConfigs: [[url: 'https://github.com/NarimenAzzouz/DevOps.git']]])
            }
        }

        stage('Build') {
            steps {
                // Commande pour la construction (à adapter selon votre projet)
                sh 'mvn clean package'
            }
        }

        stage('Test') {
            steps {
                // Commande pour l'exécution des tests (à adapter selon votre projet)
                sh 'mvn test'
            }
        }

        stage('SonarQube analysis') {
            steps {
                script {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'La pipeline a réussi! Notifiez l\'équipe.'
            emailext subject: 'Pipeline Jenkins réussie',
                      body: 'La pipeline a réussi! Consultez les détails dans Jenkins.',
                      to: 'raouiadaghnouj66@gmail.com',
                      mimeType: 'text/html'
        }
        failure {
            echo 'La pipeline a échoué! Notifiez l\'équipe et vérifiez les logs.'
            emailext subject: 'Pipeline Jenkins échouée',
                      body: 'La pipeline a échoué! Consultez les détails dans Jenkins.',
                      to: 'raouiadaghnouj66@gmail.com',
                      mimeType: 'text/html'
        }
    }
}
